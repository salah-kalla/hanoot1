def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
def keystorePropertiesRelease = new Properties()
def keystorePropertiesFileRelease = rootProject.file("key.properties")
if (keystorePropertiesFileRelease.exists()){
    keystorePropertiesRelease.load(new FileInputStream(keystorePropertiesFileRelease))
}
def keystorePropertiesDebug= new Properties()
def keystorePropertiesFileDebug = rootProject.file("key.properties")
if (keystorePropertiesFileDebug.exists()) {
    keystorePropertiesDebug.load(new FileInputStream(keystorePropertiesFileDebug))
}
android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.gibran.hanoot.store"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        resConfigs "en"
    }
    signingConfigs{
        release{


            if(System.getenv()["CI"]){
                storeFile file(System.getenv()["FCI_BUILD_DIR"] + "/key.jks")
                storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["FCI_KEY_ALIAS"]
                keyPassword System.getenv()["FCI_KEY_PASSWORD"]
            }else{
                keyAlias keystorePropertiesRelease["keyAlias"]
                keyPassword keystorePropertiesRelease["keyPassword"]
                storeFile file(keystorePropertiesRelease["storeFile"])
                storePassword keystorePropertiesRelease["storePassword"]
            }
        }
        debug {
            keyAlias keystorePropertiesDebug["keyAlias"]
            keyPassword keystorePropertiesDebug["keyPassword"]
            storeFile file(keystorePropertiesDebug["storeFile"])
            storePassword keystorePropertiesDebug["storePassword"]
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation 'com.google.android.gms:play-services-auth:16.0.0'
    implementation 'com.google.firebase:firebase-auth:18.1.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.firebase:firebase-storage:18.1.0'
//    implementation 'com.google.firebase:firebase-ads:17.2.0'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'


}

apply plugin: 'com.google.gms.google-services'
